{\rtf1\ansi\ansicpg936\cocoartf1187
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red177\green70\blue52;\red131\green192\blue87;\red0\green160\blue190;
\red65\green182\blue69;\red120\green109\blue196;\red198\green124\blue72;\red219\green44\blue56;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf1 \CocoaLigature0 \
- (\cf2 void\cf1 )update:(\cf3 ccTime\cf1 )dt\
\{\
    \cf4 CGSize\cf1  screenSize=[[\cf3 CCDirector\cf1  \cf3 sharedDirector\cf1 ] \cf3 winSize\cf1 ];\
    \cf5 // //CCLOG(@" %f : %f",land1.position.x,land3.position.y);\cf1 \
    \cf2 if\cf1 (\cf3 land1\cf1 .\cf3 position\cf1 .\cf4 y\cf1 <(screenSize.\cf4 height\cf1 *(-\cf6 0.3\cf1 )+[\cf3 land1\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 height\cf1 )/\cf6 2\cf1 )\
    \{\
    \cf5 //CGPoint pos1=land1.position;\cf1 \
    \cf5 //pos1.x-=10;\cf1 \
    \cf5 //pos1.y+=10;\cf1 \
    \cf5 //land1.position=pos1;\cf1 \
        \
        \cf5 //
\f1 \'d5\'e2\'c8\'fd\'b2\'bf\'b7\'d6\'a3\'ac\'b5\'f7\'d5\'fb\'bf\'aa\'ca\'bc\'cf\'c2\'c6\'c2\'ca\'b1\'d6\'ed\'b5\'c4\'bd\'c7\'b6\'c8
\f0 \cf1 \
        \cf2 if\cf1  (\cf3 startsign\cf1 .\cf3 position\cf1 .\cf4 x\cf1 <screenSize.\cf4 width\cf1 *\cf6 0.3\cf1 &&\cf3 startsign\cf1 .\cf3 position\cf1 .\cf4 x\cf1 >screenSize.\cf4 width\cf1 *\cf6 0.01\cf1 )\{\
            \cf2 id\cf1  pigac1=[\cf3 CCRotateTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf3 angle\cf1 :\cf6 50\cf1 ];\
            \cf2 id\cf1  pigac1move=[\cf3 CCMoveTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.3\cf1  \cf4 position\cf1 :\cf7 ccp\cf1 (\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 -\cf6 15\cf1 ,\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 y\cf1 )];\
            [\cf3 pig\cf1  \cf3 runAction\cf1 :[\cf3 CCSequence\cf1  \cf3 actions\cf1 :pigac1,pigac1move,\cf2 nil\cf1 ]];\
            \}\
        \
        \cf2 if\cf1  (\cf3 startsign\cf1 .\cf3 position\cf1 .\cf4 x\cf1 <screenSize.\cf4 width\cf1 *\cf6 0.01\cf1 &&\cf3 startsign\cf1 .\cf3 position\cf1 .\cf4 x\cf1 >screenSize.\cf4 width\cf1 *(-\cf6 0.2\cf1 ))\{\
            \cf2 id\cf1  pigac1=[\cf3 CCRotateTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf3 angle\cf1 :\cf6 60\cf1 ];\
            \cf2 id\cf1  pigac1move=[\cf3 CCMoveTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.2\cf1  \cf4 position\cf1 :\cf7 ccp\cf1 (\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 -\cf6 50\cf1 ,\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 y\cf1 )];\
            [\cf3 pig\cf1  \cf3 runAction\cf1 :[\cf3 CCSequence\cf1  \cf3 actions\cf1 :pigac1,pigac1move,\cf2 nil\cf1 ]];\
        \}\
        \
        \cf2 if\cf1  (\cf3 startsign\cf1 .\cf3 position\cf1 .\cf4 x\cf1 <screenSize.\cf4 width\cf1 *(-\cf6 0.2\cf1 ))\{\
            \cf2 id\cf1  pigac1=[\cf3 CCRotateTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf3 angle\cf1 :\cf6 0\cf1 ];\
            [\cf3 pig\cf1  \cf3 runAction\cf1 :pigac1];\
            \
            \}\
        \
        \cf2 if\cf1  (\cf3 startsign\cf1 .\cf3 position\cf1 .\cf4 x\cf1 <screenSize.\cf4 width\cf1 *(-\cf6 0.2\cf1 )&&!(\cf3 pigstarthigh\cf1 ==\cf6 1\cf1 ))\{\
            \cf3 pigstarthigh\cf1 =\cf6 1\cf1 ;\
            \cf4 CGPoint\cf1  belowScreenPosition = \cf4 CGPointMake\cf1 (\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 ,screenSize.\cf4 height\cf1 *\cf6 0.32\cf1 );\
            \cf3 CCMoveTo\cf1 * move = [\cf3 CCMoveTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 2.0f\cf1  \cf4 position\cf1 :belowScreenPosition];\
            \cf3 CCSequence\cf1 * sequence = [\cf3 CCSequence\cf1  \cf3 actions\cf1 :move,\cf2 nil\cf1 ];\
            [\cf3 pig\cf1  \cf3 runAction\cf1 :sequence];\
            \
        \}\
\
\
        \cf2 if\cf1  (((\cf3 land1\cf1 .\cf3 position\cf1 .\cf4 y\cf1 <(screenSize.\cf4 height\cf1 *(-\cf6 0.3\cf1 )+[\cf3 land1\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 height\cf1 )/\cf6 2\cf1 +\cf6 20\cf1 )&&(\cf3 land1\cf1 .\cf3 position\cf1 .\cf4 y\cf1 >(screenSize.\cf4 height\cf1 *(-\cf6 0.3\cf1 )+[\cf3 land1\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 height\cf1 )/\cf6 2\cf1 -\cf6 10\cf1 )))\{\
          \
            \cf4 CGPoint\cf1  belowScreenPosition = \cf4 CGPointMake\cf1 (\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 ,screenSize.\cf4 height\cf1 *\cf6 0.33\cf1 );\
            \cf3 CCMoveTo\cf1 * move = [\cf3 CCMoveTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.1f\cf1  \cf4 position\cf1 :belowScreenPosition];\
          \cf5 //  CCSequence* sequence = [CCSequence actions:move,nil];\cf1 \
            \cf5 //[pig runAction:sequence];\cf1 \
            \
        \}\
        \
\
        \cf5 //
\f1 \'b8\'fc\'d0\'c2\'cb\'f9\'d3\'d0\'d4\'aa\'cb\'d8\'ce\'bb\'d6\'c3
\f0 \cf1 \
        \cf2 for\cf1  (\cf2 int\cf1  num=\cf6 0\cf1 ; num<\cf6 7\cf1 ; num++) \{\
            \cf3 CCSprite\cf1  *sprite=[\cf3 allland\cf1  \cf4 objectAtIndex\cf1 :num];\
            \cf5 //if (sprite.position.y+[sprite texture].contentSize.height>-50) \{\cf1 \
          \cf5 //  [self runobsMoveSequencex:sprite];\cf1 \
            \cf5 //[self runobsMoveSequencey:sprite];\cf1 \
\
            \cf5 // \}\cf1 \
            \
        \}\
    \}\
    \cf2 else\cf1 \{\
        \cf5 //
\f1 \'cb\'f9\'d3\'d0\'ba\'e1\'cf\'f2\'ce\'bb\'d6\'c3\'b8\'fc\'d0\'c2
\f0 \cf1 \
        \cf2 if\cf1  (\cf3 land6\cf1 .\cf3 position\cf1 .\cf4 x\cf1 >screenSize.\cf4 width\cf1 /\cf6 3\cf1 )\
        \{\
            \cf2 for\cf1  (\cf2 int\cf1  num=\cf6 0\cf1 ; num<\cf6 7\cf1 ; num++)\
            \{\
                \cf3 CCSprite\cf1  *sprite=[\cf3 allland\cf1  \cf4 objectAtIndex\cf1 :num];\
                \cf5 //if (sprite.position.y+[sprite texture].contentSize.height>-50) \{\cf1 \
          \cf5 //      [self runobsMoveSequencex:sprite];\cf1 \
            \}\
\
 \
            \
        \}\cf2 else\cf1 \{\
            \cf5 /*CCSpriteBatchNode  *pig_val=[CCSprite spriteWithFile:@"pig-valentine1.png"];\
            pig_val.position=CGPointMake(screenSize.width*0.5 ,screenSize.height*0.5);\
            [self addChild:pig_val z:50 tag:72];\
            */\cf1 \
            \cf3 label1\cf1  = [\cf3 CCLabelTTF\cf1  \cf3 labelWithString\cf1 :[\cf4 NSString\cf1  \cf4 stringWithFormat\cf1 :\cf8 @"Game win "\cf1 ] \cf3 fontName\cf1 :\cf8 @"Marker Felt"\cf1  \cf3 fontSize\cf1 :\cf6 81\cf1 ];\
            \cf3 label1\cf1 .\cf3 position\cf1  =  \cf7 ccp\cf1 (screenSize.\cf4 width\cf1  /\cf6 2\cf1  ,screenSize.\cf4 height\cf1 /\cf6 2\cf1  );\
            [\cf2 self\cf1  \cf3 addChild\cf1 : \cf3 label1\cf1 ];\
            [[\cf3 CCDirector\cf1  \cf3 sharedDirector\cf1 ] \cf3 pause\cf1 ];\
\
        \}\
        \
        \
        \cf2 if\cf1 (\cf3 pigjumped\cf1 ==\cf6 0\cf1 )\{\
        \
        \cf2 if\cf1  ((\cf3 land5\cf1 .\cf3 position\cf1 .\cf4 x\cf1 -[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 /\cf6 2\cf1 -\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 <\cf6 0\cf1 )&&(\cf3 land5\cf1 .\cf3 position\cf1 .\cf4 x\cf1 -[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 /\cf6 2\cf1 -\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 >[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 /\cf6 2\cf1 *(-\cf6 1\cf1 )))\{\
            \cf2 id\cf1  pigac1=[\cf3 CCRotateTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf3 angle\cf1 :\cf6 20\cf1 ];\
            \cf2 id\cf1  pigac1move=[\cf3 CCMoveTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf4 position\cf1 :\cf7 ccp\cf1 (\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 ,\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 y\cf1 -\cf6 20\cf1 )];\
            [\cf3 pig\cf1  \cf3 runAction\cf1 :[\cf3 CCSequence\cf1  \cf3 actions\cf1 :pigac1,pigac1move,\cf2 nil\cf1 ]];\
        \}\
        \
        \cf2 if\cf1  ((\cf3 land5\cf1 .\cf3 position\cf1 .\cf4 x\cf1 -[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 /\cf6 2\cf1 -\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 <[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 /\cf6 2\cf1 *(-\cf6 1\cf1 ))&&(\cf3 land5\cf1 .\cf3 position\cf1 .\cf4 x\cf1 -[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 /\cf6 2\cf1 -\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 >[\cf3 land5\cf1  \cf3 texture\cf1 ].\cf3 contentSize\cf1 .\cf4 width\cf1 *(-\cf6 1\cf1 )))\{\
            \cf2 id\cf1  pigac1=[\cf3 CCRotateTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf3 angle\cf1 :\cf6 0\cf1 ];\
            \cf2 id\cf1  pigac1move=[\cf3 CCMoveTo\cf1  \cf3 actionWithDuration\cf1 :\cf6 0.5\cf1  \cf4 position\cf1 :\cf7 ccp\cf1 (\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 x\cf1 ,\cf3 pig\cf1 .\cf3 position\cf1 .\cf4 y\cf1 +\cf6 20\cf1 )];\
            [\cf3 pig\cf1  \cf3 runAction\cf1 :[\cf3 CCSequence\cf1  \cf3 actions\cf1 :pigac1,pigac1move,\cf2 nil\cf1 ]];\
        \}\
        \}\
        \
    [\cf2 self\cf1  \cf3 Gameovertest\cf1 ];\
        \
    \}\
  \
    \
\
\}}